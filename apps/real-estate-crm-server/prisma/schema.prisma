datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Property {
  address          String?
  agent            String?
  agentAssignments AgentAssignment[]
  appointments     Appointment[]
  createdAt        DateTime            @default(now())
  description      String?
  id               String              @id @default(cuid())
  price            Float?
  status           EnumPropertyStatus?
  updatedAt        DateTime            @updatedAt
}

model AgentAssignment {
  agentName      String?
  assignmentDate DateTime?
  createdAt      DateTime                   @default(now())
  id             String                     @id @default(cuid())
  property       Property?                  @relation(fields: [propertyId], references: [id])
  propertyId     String?
  status         EnumAgentAssignmentStatus?
  updatedAt      DateTime                   @updatedAt
}

model Appointment {
  agent      String?
  client     Client?   @relation(fields: [clientId], references: [id])
  clientId   String?
  createdAt  DateTime  @default(now())
  date       DateTime?
  id         String    @id @default(cuid())
  location   String?
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?
  updatedAt  DateTime  @updatedAt
}

model Client {
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  email        String?
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  phone        String?
  updatedAt    DateTime      @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

enum EnumPropertyStatus {
  Option1
}

enum EnumAgentAssignmentStatus {
  Option1
}
